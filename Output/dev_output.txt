INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /workspace/downward/builds/release/bin/translate/translate.py /spaceport/domain.pddl /spaceport/mission.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.010s wall-clock]
Normalizing task... [0.010s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.006s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 111 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
606 relevant atoms
723 auxiliary atoms
1329 final queue length
3316 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.040s CPU, 0.047s wall-clock]
Computing fact groups...
Finding invariants...
37 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
490 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
14 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
29 of 29 variables necessary.
2 of 10 mutex groups necessary.
315 of 315 operators necessary.
2 of 2 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.004s wall-clock]
Translator variables: 29
Translator derived variables: 2
Translator facts: 94
Translator goal facts: 2
Translator mutex groups: 2
Translator total mutex groups size: 8
Translator operators: 315
Translator axioms: 2
Translator task size: 2323
Translator peak memory: 37436 KB
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [0.100s CPU, 0.103s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /workspace/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=2.1056e-05s]
done reading input! [t=0.00127979s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00475359s
Discovered 37 landmarks, of which 5 are disjunctive and 0 are conjunctive 
158 edges
Simplifying 960 unary operators... done! [276 unary operators]
time to simplify: 0.000332405s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.00785292s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000113612s
Variables: 29
FactPairs: 94
Bytes per state: 8
Conducting lazy best first search, (real) bound = 2147483647
16 initial landmarks, 2 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 20
New best heuristic value for ff(transform = adapt_costs(one)): 20
[g=0, 1 evaluated, 0 expanded, t=0.00802394s, 22444 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 20
Initial heuristic value for ff(transform = adapt_costs(one)): 20
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 19
New best heuristic value for ff(transform = adapt_costs(one)): 19
[g=1, 2 evaluated, 1 expanded, t=0.00807693s, 22444 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 18
New best heuristic value for ff(transform = adapt_costs(one)): 18
[g=2, 3 evaluated, 2 expanded, t=0.00811958s, 22444 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 17
[g=3, 6 evaluated, 5 expanded, t=0.00819463s, 22444 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 17
[g=3, 8 evaluated, 7 expanded, t=0.0082513s, 22444 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 16
New best heuristic value for ff(transform = adapt_costs(one)): 16
[g=4, 11 evaluated, 10 expanded, t=0.00832675s, 22444 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 15
New best heuristic value for ff(transform = adapt_costs(one)): 15
[g=5, 14 evaluated, 13 expanded, t=0.00840589s, 22444 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 14
New best heuristic value for ff(transform = adapt_costs(one)): 14
[g=7, 17 evaluated, 16 expanded, t=0.00853348s, 22444 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 13
New best heuristic value for ff(transform = adapt_costs(one)): 13
[g=8, 18 evaluated, 17 expanded, t=0.00862258s, 22444 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 12
New best heuristic value for ff(transform = adapt_costs(one)): 12
[g=9, 19 evaluated, 18 expanded, t=0.00868588s, 22444 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 11
New best heuristic value for ff(transform = adapt_costs(one)): 11
[g=10, 20 evaluated, 19 expanded, t=0.00873981s, 22444 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 10
New best heuristic value for ff(transform = adapt_costs(one)): 10
[g=11, 21 evaluated, 20 expanded, t=0.00877664s, 22444 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 9
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=12, 22 evaluated, 21 expanded, t=0.00885075s, 22444 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=13, 23 evaluated, 22 expanded, t=0.00890551s, 22444 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=14, 24 evaluated, 23 expanded, t=0.00896595s, 22444 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=15, 25 evaluated, 24 expanded, t=0.00903712s, 22444 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=16, 26 evaluated, 25 expanded, t=0.00918348s, 22444 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=17, 27 evaluated, 26 expanded, t=0.00932474s, 22444 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[g=18, 28 evaluated, 27 expanded, t=0.0094238s, 22444 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=26, 46 evaluated, 45 expanded, t=0.0100821s, 22444 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=27, 47 evaluated, 46 expanded, t=0.0101344s, 22444 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=28, 48 evaluated, 47 expanded, t=0.0101996s, 22444 KB]
Solution found!
Actual search time: 0.00237516s [t=0.0103707s]
unlock-door tretter door-science-lab hallway-b science-lab (1)
change-room tretter science-lab hallway-b door-science-lab (1)
monitor-repair penley engineering (1)
repair-ship hagarty mav-a (1)
change-room penley engineering hallway-a door-engi (1)
change-room tretter hallway-b hallway-a no-door (1)
unlock-door tretter door-launch-bay hallway-a launch-bay (1)
change-room tretter hallway-a hallway-b no-door (1)
change-room tretter hallway-b bridge door-bridge (1)
change-room bunte launch-bay hallway-a door-launch-bay (1)
change-room penley hallway-a launch-bay door-launch-bay (1)
change-room bunte hallway-a hallway-b no-door (1)
change-room bunte hallway-b bridge door-bridge (1)
recall-mav mav-a hagarty launch-bay (1)
recall-mav mav-b zayicek launch-bay (1)
prep-departure bridge (1)
leave-subregion earth (1)
visit-subregion sol ceres (1)
change-room penley launch-bay hallway-a door-launch-bay (1)
change-room penley hallway-a engineering door-engi (1)
monitor-repair penley engineering (1)
deploy-probe probe-a ceres (1)
deploy-mav hagarty mav-b launch-bay b (1)
repair-ship hagarty mav-b (1)
recall-mav mav-b hagarty launch-bay (1)
prep-departure bridge (1)
leave-subregion ceres (1)
hyperspace-move sol proxima-centauri (1)
visit-subregion proxima-centauri b (1)
Plan length: 29 step(s).
Plan cost: 29
Expanded 49 state(s).
Reopened 0 state(s).
Evaluated 50 state(s).
Evaluations: 100
Generated 2358 state(s).
Dead ends: 0 state(s).
Number of registered states: 50
Int hash set load factor: 50/64 = 0.78125
Int hash set resizes: 6
Search time: 0.00240651s
Total time: 0.0103732s
Solution found.
Peak memory: 22444 KB
Remove intermediate file output.sas
search exit code: 0

