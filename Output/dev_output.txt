INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python /workspace/downward/builds/release/bin/translate/translate.py /spaceport/domain.pddl /spaceport/mission.pddl --sas-file output.sas
Parsing...
Warning: Atom in-region(alpha-centauri, eden) is specified twice in initial state specification
Parsing: [0.010s CPU, 0.016s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.009s wall-clock]
Preparing model... [0.010s CPU, 0.005s wall-clock]
Generated 180 rules.
Computing model... [0.030s CPU, 0.034s wall-clock]
1068 relevant atoms
1517 auxiliary atoms
2585 final queue length
6099 total queue pushes
Completing instantiation... [0.040s CPU, 0.038s wall-clock]
Instantiating: [0.090s CPU, 0.088s wall-clock]
Computing fact groups...
Finding invariants...
45 initial candidates
Finding invariants: [0.010s CPU, 0.008s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
81 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.004s wall-clock]
Translating task: [0.060s CPU, 0.059s wall-clock]
1284 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
36 operators removed
0 axioms removed
37 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
66 of 82 variables necessary.
0 of 13 mutex groups necessary.
609 of 624 operators necessary.
3 of 3 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 66
Translator derived variables: 3
Translator facts: 224
Translator goal facts: 2
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 609
Translator axioms: 3
Translator task size: 5211
Translator peak memory: 40268 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.210s CPU, 0.215s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /workspace/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
reading input... [t=1.7675e-05s]
done reading input! [t=0.002612s]
Initializing landmarks count heuristic...
Initializing Exploration...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00408973s
Discovered 29 landmarks, of which 1 are disjunctive and 0 are conjunctive 
89 edges
Simplifying 1751 unary operators... done! [1739 unary operators]
time to simplify: 0.000655343s
Initializing additive heuristic...
Initializing FF heuristic...
Building successor generator...done! [t=0.00914915s]
peak memory difference for successor generator creation: 0 KB
time for successor generation creation: 0.000292792s
Variables: 66
FactPairs: 224
Bytes per state: 16
Conducting lazy best first search, (real) bound = 2147483647
15 initial landmarks, 2 goal landmarks
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 14
New best heuristic value for ff(transform = adapt_costs(one)): 14
[g=0, 1 evaluated, 0 expanded, t=0.00937045s, 22872 KB]
Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 14
Initial heuristic value for ff(transform = adapt_costs(one)): 14
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 13
New best heuristic value for ff(transform = adapt_costs(one)): 13
[g=1, 4 evaluated, 3 expanded, t=0.00956755s, 22872 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 12
New best heuristic value for ff(transform = adapt_costs(one)): 12
[g=2, 6 evaluated, 5 expanded, t=0.00971451s, 22872 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 11
[g=4, 9 evaluated, 8 expanded, t=0.0098977s, 22872 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 10
[g=5, 10 evaluated, 9 expanded, t=0.0099809s, 22872 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 9
[g=7, 15 evaluated, 14 expanded, t=0.0102707s, 22872 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
[g=8, 17 evaluated, 16 expanded, t=0.0103867s, 22872 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
[g=10, 22 evaluated, 21 expanded, t=0.0106518s, 22872 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
New best heuristic value for ff(transform = adapt_costs(one)): 11
[g=11, 23 evaluated, 22 expanded, t=0.0107175s, 22872 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 10
[g=12, 25 evaluated, 24 expanded, t=0.010842s, 22872 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 9
[g=13, 28 evaluated, 27 expanded, t=0.0110074s, 22872 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
New best heuristic value for ff(transform = adapt_costs(one)): 8
[g=14, 30 evaluated, 29 expanded, t=0.0111396s, 22872 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 7
[g=15, 31 evaluated, 30 expanded, t=0.0112157s, 22872 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 6
[g=16, 32 evaluated, 31 expanded, t=0.0112875s, 22872 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
New best heuristic value for ff(transform = adapt_costs(one)): 5
[g=17, 34 evaluated, 33 expanded, t=0.0114033s, 22872 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
New best heuristic value for ff(transform = adapt_costs(one)): 4
[g=18, 35 evaluated, 34 expanded, t=0.0114581s, 22872 KB]
New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
New best heuristic value for ff(transform = adapt_costs(one)): 3
[g=19, 36 evaluated, 35 expanded, t=0.0115264s, 22872 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 2
[g=20, 37 evaluated, 36 expanded, t=0.011593s, 22872 KB]
New best heuristic value for ff(transform = adapt_costs(one)): 1
[g=21, 38 evaluated, 37 expanded, t=0.0116442s, 22872 KB]
Solution found!
Actual search time: 0.00239601s [t=0.0116928s]
prep-departure bridge launch-bay (1)
operate-controls zayicek launch-bay (1)
change-room elba science-lab hallway-b door-science-lab (1)
change-room elba hallway-b hallway-a no-door (1)
change-room elba hallway-a launch-bay door-launch-bay (1)
leave-subregion earth (1)
hyperspace-move sol alpha-centauri (1)
visit-subregion alpha-centauri pleiades (1)
deploy-vehicle probe-a launch-bay pleiades (1)
probe-collect-plasma probe-a pleiades plasma-ple (1)
dock-vehicle probe-a launch-bay pleiades (1)
prep-departure bridge launch-bay (1)
probe-deliver probe-a plasma-ple launch-bay (1)
pickup-object launch-bay elba plasma-ple (1)
change-room elba launch-bay hallway-a door-launch-bay (1)
change-room elba hallway-a hallway-b no-door (1)
change-room elba hallway-b science-lab door-science-lab (1)
drop-object elba plasma-ple science-lab (1)
analyse-plasma elba plasmascan-ple plasma-ple science-lab (1)
leave-subregion pleiades (1)
hyperspace-move alpha-centauri sol (1)
visit-subregion sol earth (1)
Plan length: 22 step(s).
Plan cost: 22
Expanded 38 state(s).
Reopened 0 state(s).
Evaluated 39 state(s).
Evaluations: 78
Generated 612 state(s).
Dead ends: 0 state(s).
Number of registered states: 39
Int hash set load factor: 39/64 = 0.609375
Int hash set resizes: 6
Search time: 0.00244682s
Total time: 0.011695s
Solution found.
Peak memory: 22872 KB
Remove intermediate file output.sas
search exit code: 0

